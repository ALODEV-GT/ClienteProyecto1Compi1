
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadorDef.cup;

import java_cup.runtime.Symbol;
import analizadorDef.tablaSimbolos.TablaSimbolosDef;
import analizadorDef.tablaSimbolos.TerminoDef;
import analizadorDef.tablaSimbolos.RolDef;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\346\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\005\000\002\003\004\000\002\003\004" +
    "\000\002\003\003\000\002\004\004\000\002\004\003\000" +
    "\002\005\004\000\002\005\004\000\002\005\003\000\002" +
    "\005\003\000\002\006\004\000\002\006\003\000\002\007" +
    "\003\000\002\007\003\000\002\010\004\000\002\010\003" +
    "\000\002\014\005\000\002\014\005\000\002\014\005\000" +
    "\002\014\005\000\002\014\005\000\002\014\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\011" +
    "\004\000\002\012\004\000\002\012\003\000\002\013\003" +
    "\000\002\013\004\000\002\013\004\000\002\013\004\000" +
    "\002\013\004\000\002\013\003\000\002\016\004\000\002" +
    "\016\002\000\002\017\004\000\002\017\004\000\002\017" +
    "\003\000\002\020\004\000\002\020\003\000\002\021\004" +
    "\000\002\021\002\000\002\022\003\000\002\022\003\000" +
    "\002\023\004\000\002\023\002\000\002\024\004\000\002" +
    "\024\004\000\002\024\003\000\002\025\004\000\002\025" +
    "\003\000\002\026\004\000\002\026\002\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\027\003\000" +
    "\002\030\004\000\002\030\002\000\002\031\004\000\002" +
    "\031\004\000\002\031\003\000\002\032\004\000\002\032" +
    "\003\000\002\033\004\000\002\033\002\000\002\034\003" +
    "\000\002\034\003\000\002\034\003\000\002\034\003\000" +
    "\002\035\004\000\002\035\002\000\002\036\004\000\002" +
    "\036\004\000\002\036\003\000\002\037\004\000\002\037" +
    "\003\000\002\040\004\000\002\040\002\000\002\041\003" +
    "\000\002\041\003\000\002\042\004\000\002\042\003\000" +
    "\002\043\004\000\002\043\003\000\002\044\004\000\002" +
    "\044\004\000\002\044\003\000\002\045\004\000\002\045" +
    "\004\000\002\045\004\000\002\045\004\000\002\045\004" +
    "\000\002\045\003\000\002\047\004\000\002\050\004\000" +
    "\002\051\004\000\002\052\004\000\002\053\004\000\002" +
    "\054\004\000\002\055\004\000\002\056\004\000\002\057" +
    "\004\000\002\057\003\000\002\123\003\000\002\123\003" +
    "\000\002\100\004\000\002\100\003\000\002\101\004\000" +
    "\002\101\004\000\002\101\003\000\002\102\004\000\002" +
    "\102\003\000\002\103\003\000\002\103\003\000\002\060" +
    "\004\000\002\060\003\000\002\061\004\000\002\061\004" +
    "\000\002\061\003\000\002\062\004\000\002\062\003\000" +
    "\002\063\003\000\002\063\003\000\002\116\004\000\002" +
    "\116\003\000\002\117\004\000\002\117\004\000\002\117" +
    "\004\000\002\117\003\000\002\122\004\000\002\122\004" +
    "\000\002\122\004\000\002\122\004\000\002\122\004\000" +
    "\002\122\003\000\002\120\004\000\002\120\003\000\002" +
    "\121\003\000\002\121\003\000\002\104\004\000\002\104" +
    "\003\000\002\105\004\000\002\105\004\000\002\105\004" +
    "\000\002\105\003\000\002\110\004\000\002\110\004\000" +
    "\002\110\004\000\002\110\003\000\002\106\004\000\002" +
    "\106\003\000\002\107\003\000\002\107\003\000\002\111" +
    "\004\000\002\111\003\000\002\112\004\000\002\112\004" +
    "\000\002\112\004\000\002\112\003\000\002\115\004\000" +
    "\002\115\004\000\002\115\004\000\002\115\003\000\002" +
    "\113\004\000\002\113\003\000\002\114\003\000\002\114" +
    "\003\000\002\124\004\000\002\124\003\000\002\125\004" +
    "\000\002\125\004\000\002\125\004\000\002\125\003\000" +
    "\002\130\004\000\002\130\004\000\002\130\004\000\002" +
    "\130\004\000\002\130\004\000\002\130\003\000\002\126" +
    "\004\000\002\126\003\000\002\127\003\000\002\127\003" +
    "\000\002\064\004\000\002\064\003\000\002\065\004\000" +
    "\002\065\003\000\002\066\004\000\002\066\004\000\002" +
    "\066\003\000\002\067\004\000\002\067\003\000\002\070" +
    "\004\000\002\070\003\000\002\071\004\000\002\071\004" +
    "\000\002\071\003\000\002\072\004\000\002\072\003\000" +
    "\002\073\004\000\002\073\003\000\002\074\004\000\002" +
    "\074\004\000\002\074\004\000\002\074\003\000\002\077" +
    "\004\000\002\077\004\000\002\077\004\000\002\077\004" +
    "\000\002\077\004\000\002\077\004\000\002\077\004\000" +
    "\002\077\003\000\002\075\004\000\002\075\003\000\002" +
    "\076\003\000\002\076\003\000\002\131\004\000\002\132" +
    "\004\000\002\132\004\000\002\132\003\000\002\133\003" +
    "\000\002\133\003\000\002\046\003\000\002\046\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0161\000\014\003\010\016\006\017\007\023\004\045" +
    "\011\001\002\000\006\003\u0160\026\u015f\001\002\000\014" +
    "\003\010\016\006\017\007\023\004\045\011\001\002\000" +
    "\006\003\u0140\023\u013f\001\002\000\006\003\u0140\023\u013f" +
    "\001\002\000\014\003\ufffb\016\ufffb\017\ufffb\023\ufffb\045" +
    "\ufffb\001\002\000\006\003\014\051\016\001\002\000\004" +
    "\002\013\001\002\000\004\002\001\001\002\000\004\002" +
    "\uffab\001\002\000\004\002\uffff\001\002\000\006\003\020" +
    "\046\017\001\002\000\010\003\022\043\025\045\023\001" +
    "\002\000\004\002\uffa9\001\002\000\004\002\uffac\001\002" +
    "\000\004\002\uffa6\001\002\000\016\003\045\020\034\052" +
    "\047\053\046\054\044\060\041\001\002\000\004\002\uffaa" +
    "\001\002\000\006\003\026\051\030\001\002\000\004\002" +
    "\uff96\001\002\000\004\002\uffa7\001\002\000\006\003\033" +
    "\046\032\001\002\000\004\002\uff97\001\002\000\004\002" +
    "\uff1d\001\002\000\004\002\uff1c\001\002\000\006\003\u0108" +
    "\021\u0109\001\002\000\010\003\022\043\025\045\023\001" +
    "\002\000\010\003\022\043\025\045\023\001\002\000\010" +
    "\003\022\043\025\045\023\001\002\000\010\003\022\043" +
    "\025\045\023\001\002\000\006\003\u0101\046\u0100\001\002" +
    "\000\010\003\022\043\025\045\023\001\002\000\004\002" +
    "\uffa8\001\002\000\006\003\231\046\230\001\002\000\004" +
    "\002\uffa0\001\002\000\006\003\213\046\212\001\002\000" +
    "\006\003\051\046\050\001\002\000\010\003\054\043\057" +
    "\047\055\001\002\000\012\003\uff92\043\uff92\045\uff92\047" +
    "\uff92\001\002\000\012\003\uff9f\043\uff9f\045\uff9f\047\uff9f" +
    "\001\002\000\010\003\054\043\057\047\055\001\002\000" +
    "\012\003\uff8f\043\uff8f\045\uff8f\047\uff8f\001\002\000\010" +
    "\003\070\004\072\023\066\001\002\000\012\003\uff93\043" +
    "\uff93\045\uff93\047\uff93\001\002\000\006\003\060\052\062" +
    "\001\002\000\012\003\uff8d\043\uff8d\045\uff8d\047\uff8d\001" +
    "\002\000\012\003\uff91\043\uff91\045\uff91\047\uff91\001\002" +
    "\000\006\003\065\046\063\001\002\000\012\003\uff8c\043" +
    "\uff8c\045\uff8c\047\uff8c\001\002\000\012\003\uff8e\043\uff8e" +
    "\045\uff8e\047\uff8e\001\002\000\012\003\uff8b\043\uff8b\045" +
    "\uff8b\047\uff8b\001\002\000\006\003\206\050\207\001\002" +
    "\000\012\003\uff23\043\uff23\045\uff23\047\uff23\001\002\000" +
    "\012\003\uff20\043\uff20\045\uff20\047\uff20\001\002\000\006" +
    "\003\206\050\207\001\002\000\006\003\074\030\073\001" +
    "\002\000\016\003\076\005\102\006\100\007\101\013\103" +
    "\015\104\001\002\000\022\003\uffe3\027\uffe3\034\uffe3\037" +
    "\uffe3\040\uffe3\041\uffe3\042\uffe3\050\uffe3\001\002\000\022" +
    "\003\uffe5\027\uffe5\034\uffe5\037\uffe5\040\uffe5\041\uffe5\042" +
    "\uffe5\050\uffe5\001\002\000\022\003\uffdd\027\uffdd\034\uffdd" +
    "\037\uffdd\040\uffdd\041\uffdd\042\uffdd\050\uffdd\001\002\000" +
    "\022\003\uffe4\027\uffe4\034\uffe4\037\uffe4\040\uffe4\041\uffe4" +
    "\042\uffe4\050\uffe4\001\002\000\024\003\uffdb\027\uffdb\034" +
    "\uffdb\035\167\037\uffdb\040\uffdb\041\uffdb\042\uffdb\050\uffdb" +
    "\001\002\000\024\003\uffd0\027\uffd0\034\uffd0\035\146\037" +
    "\uffd0\040\uffd0\041\uffd0\042\uffd0\050\uffd0\001\002\000\022" +
    "\003\uffe2\027\uffe2\034\uffe2\037\uffe2\040\uffe2\041\uffe2\042" +
    "\uffe2\050\uffe2\001\002\000\024\003\uffc3\027\uffc3\034\uffc3" +
    "\035\125\037\uffc3\040\uffc3\041\uffc3\042\uffc3\050\uffc3\001" +
    "\002\000\024\003\uffb6\027\uffb6\034\uffb6\035\106\037\uffb6" +
    "\040\uffb6\041\uffb6\042\uffb6\050\uffb6\001\002\000\022\003" +
    "\uffde\027\uffde\034\uffde\037\uffde\040\uffde\041\uffde\042\uffde" +
    "\050\uffde\001\002\000\010\003\110\023\107\025\112\001" +
    "\002\000\006\003\113\036\115\001\002\000\022\003\uffb3" +
    "\027\uffb3\034\uffb3\037\uffb3\040\uffb3\041\uffb3\042\uffb3\050" +
    "\uffb3\001\002\000\022\003\uffb7\027\uffb7\034\uffb7\037\uffb7" +
    "\040\uffb7\041\uffb7\042\uffb7\050\uffb7\001\002\000\006\003" +
    "\113\036\115\001\002\000\022\003\uffb1\027\uffb1\034\uffb1" +
    "\037\uffb1\040\uffb1\041\uffb1\042\uffb1\050\uffb1\001\002\000" +
    "\022\003\uffb5\027\uffb5\034\uffb5\037\uffb5\040\uffb5\041\uffb5" +
    "\042\uffb5\050\uffb5\001\002\000\024\003\uffaf\027\uffaf\030" +
    "\116\034\uffaf\037\uffaf\040\uffaf\041\uffaf\042\uffaf\050\uffaf" +
    "\001\002\000\006\003\121\061\120\001\002\000\022\003" +
    "\uffb2\027\uffb2\034\uffb2\037\uffb2\040\uffb2\041\uffb2\042\uffb2" +
    "\050\uffb2\001\002\000\022\003\uffae\027\uffae\034\uffae\037" +
    "\uffae\040\uffae\041\uffae\042\uffae\050\uffae\001\002\000\022" +
    "\003\uffad\027\uffad\034\uffad\037\uffad\040\uffad\041\uffad\042" +
    "\uffad\050\uffad\001\002\000\022\003\uffb0\027\uffb0\034\uffb0" +
    "\037\uffb0\040\uffb0\041\uffb0\042\uffb0\050\uffb0\001\002\000" +
    "\022\003\uffb4\027\uffb4\034\uffb4\037\uffb4\040\uffb4\041\uffb4" +
    "\042\uffb4\050\uffb4\001\002\000\022\003\uffdf\027\uffdf\034" +
    "\uffdf\037\uffdf\040\uffdf\041\uffdf\042\uffdf\050\uffdf\001\002" +
    "\000\010\003\130\023\126\025\131\001\002\000\006\003" +
    "\133\036\134\001\002\000\022\003\uffc4\027\uffc4\034\uffc4" +
    "\037\uffc4\040\uffc4\041\uffc4\042\uffc4\050\uffc4\001\002\000" +
    "\022\003\uffc0\027\uffc0\034\uffc0\037\uffc0\040\uffc0\041\uffc0" +
    "\042\uffc0\050\uffc0\001\002\000\006\003\133\036\134\001" +
    "\002\000\022\003\uffc2\027\uffc2\034\uffc2\037\uffc2\040\uffc2" +
    "\041\uffc2\042\uffc2\050\uffc2\001\002\000\022\003\uffbe\027" +
    "\uffbe\034\uffbe\037\uffbe\040\uffbe\041\uffbe\042\uffbe\050\uffbe" +
    "\001\002\000\024\003\uffbc\027\uffbc\030\136\034\uffbc\037" +
    "\uffbc\040\uffbc\041\uffbc\042\uffbc\050\uffbc\001\002\000\022" +
    "\003\uffbf\027\uffbf\034\uffbf\037\uffbf\040\uffbf\041\uffbf\042" +
    "\uffbf\050\uffbf\001\002\000\012\003\140\010\142\011\143" +
    "\014\141\001\002\000\022\003\uffbd\027\uffbd\034\uffbd\037" +
    "\uffbd\040\uffbd\041\uffbd\042\uffbd\050\uffbd\001\002\000\022" +
    "\003\uffb8\027\uffb8\034\uffb8\037\uffb8\040\uffb8\041\uffb8\042" +
    "\uffb8\050\uffb8\001\002\000\022\003\uffb9\027\uffb9\034\uffb9" +
    "\037\uffb9\040\uffb9\041\uffb9\042\uffb9\050\uffb9\001\002\000" +
    "\022\003\uffbb\027\uffbb\034\uffbb\037\uffbb\040\uffbb\041\uffbb" +
    "\042\uffbb\050\uffbb\001\002\000\022\003\uffba\027\uffba\034" +
    "\uffba\037\uffba\040\uffba\041\uffba\042\uffba\050\uffba\001\002" +
    "\000\022\003\uffc1\027\uffc1\034\uffc1\037\uffc1\040\uffc1\041" +
    "\uffc1\042\uffc1\050\uffc1\001\002\000\022\003\uffe0\027\uffe0" +
    "\034\uffe0\037\uffe0\040\uffe0\041\uffe0\042\uffe0\050\uffe0\001" +
    "\002\000\010\003\151\023\147\025\152\001\002\000\006" +
    "\003\154\036\155\001\002\000\022\003\uffd1\027\uffd1\034" +
    "\uffd1\037\uffd1\040\uffd1\041\uffd1\042\uffd1\050\uffd1\001\002" +
    "\000\022\003\uffcd\027\uffcd\034\uffcd\037\uffcd\040\uffcd\041" +
    "\uffcd\042\uffcd\050\uffcd\001\002\000\006\003\154\036\155" +
    "\001\002\000\022\003\uffcf\027\uffcf\034\uffcf\037\uffcf\040" +
    "\uffcf\041\uffcf\042\uffcf\050\uffcf\001\002\000\022\003\uffcb" +
    "\027\uffcb\034\uffcb\037\uffcb\040\uffcb\041\uffcb\042\uffcb\050" +
    "\uffcb\001\002\000\024\003\uffc9\027\uffc9\030\156\034\uffc9" +
    "\037\uffc9\040\uffc9\041\uffc9\042\uffc9\050\uffc9\001\002\000" +
    "\012\003\160\010\162\011\164\012\161\001\002\000\022" +
    "\003\uffcc\027\uffcc\034\uffcc\037\uffcc\040\uffcc\041\uffcc\042" +
    "\uffcc\050\uffcc\001\002\000\022\003\uffc5\027\uffc5\034\uffc5" +
    "\037\uffc5\040\uffc5\041\uffc5\042\uffc5\050\uffc5\001\002\000" +
    "\022\003\uffc6\027\uffc6\034\uffc6\037\uffc6\040\uffc6\041\uffc6" +
    "\042\uffc6\050\uffc6\001\002\000\022\003\uffc8\027\uffc8\034" +
    "\uffc8\037\uffc8\040\uffc8\041\uffc8\042\uffc8\050\uffc8\001\002" +
    "\000\022\003\uffca\027\uffca\034\uffca\037\uffca\040\uffca\041" +
    "\uffca\042\uffca\050\uffca\001\002\000\022\003\uffc7\027\uffc7" +
    "\034\uffc7\037\uffc7\040\uffc7\041\uffc7\042\uffc7\050\uffc7\001" +
    "\002\000\022\003\uffce\027\uffce\034\uffce\037\uffce\040\uffce" +
    "\041\uffce\042\uffce\050\uffce\001\002\000\022\003\uffe1\027" +
    "\uffe1\034\uffe1\037\uffe1\040\uffe1\041\uffe1\042\uffe1\050\uffe1" +
    "\001\002\000\010\003\171\023\170\025\173\001\002\000" +
    "\006\003\174\036\176\001\002\000\022\003\uffd8\027\uffd8" +
    "\034\uffd8\037\uffd8\040\uffd8\041\uffd8\042\uffd8\050\uffd8\001" +
    "\002\000\022\003\uffdc\027\uffdc\034\uffdc\037\uffdc\040\uffdc" +
    "\041\uffdc\042\uffdc\050\uffdc\001\002\000\006\003\174\036" +
    "\176\001\002\000\022\003\uffd6\027\uffd6\034\uffd6\037\uffd6" +
    "\040\uffd6\041\uffd6\042\uffd6\050\uffd6\001\002\000\022\003" +
    "\uffda\027\uffda\034\uffda\037\uffda\040\uffda\041\uffda\042\uffda" +
    "\050\uffda\001\002\000\024\003\uffd4\027\uffd4\030\177\034" +
    "\uffd4\037\uffd4\040\uffd4\041\uffd4\042\uffd4\050\uffd4\001\002" +
    "\000\006\003\202\010\203\001\002\000\022\003\uffd7\027" +
    "\uffd7\034\uffd7\037\uffd7\040\uffd7\041\uffd7\042\uffd7\050\uffd7" +
    "\001\002\000\022\003\uffd5\027\uffd5\034\uffd5\037\uffd5\040" +
    "\uffd5\041\uffd5\042\uffd5\050\uffd5\001\002\000\022\003\uffd2" +
    "\027\uffd2\034\uffd2\037\uffd2\040\uffd2\041\uffd2\042\uffd2\050" +
    "\uffd2\001\002\000\022\003\uffd3\027\uffd3\034\uffd3\037\uffd3" +
    "\040\uffd3\041\uffd3\042\uffd3\050\uffd3\001\002\000\022\003" +
    "\uffd9\027\uffd9\034\uffd9\037\uffd9\040\uffd9\041\uffd9\042\uffd9" +
    "\050\uffd9\001\002\000\012\003\uff22\043\uff22\045\uff22\047" +
    "\uff22\001\002\000\012\003\uff1e\043\uff1e\045\uff1e\047\uff1e" +
    "\001\002\000\012\003\uff1f\043\uff1f\045\uff1f\047\uff1f\001" +
    "\002\000\012\003\uff21\043\uff21\045\uff21\047\uff21\001\002" +
    "\000\012\003\uff90\043\uff90\045\uff90\047\uff90\001\002\000" +
    "\010\003\216\043\220\047\055\001\002\000\012\003\uff89" +
    "\043\uff89\045\uff89\047\uff89\001\002\000\012\003\uff9e\043" +
    "\uff9e\045\uff9e\047\uff9e\001\002\000\010\003\216\043\220" +
    "\047\055\001\002\000\012\003\uff86\043\uff86\045\uff86\047" +
    "\uff86\001\002\000\012\003\uff8a\043\uff8a\045\uff8a\047\uff8a" +
    "\001\002\000\006\003\222\053\223\001\002\000\012\003" +
    "\uff88\043\uff88\045\uff88\047\uff88\001\002\000\012\003\uff84" +
    "\043\uff84\045\uff84\047\uff84\001\002\000\006\003\226\046" +
    "\225\001\002\000\012\003\uff85\043\uff85\045\uff85\047\uff85" +
    "\001\002\000\012\003\uff83\043\uff83\045\uff83\047\uff83\001" +
    "\002\000\012\003\uff82\043\uff82\045\uff82\047\uff82\001\002" +
    "\000\012\003\uff87\043\uff87\045\uff87\047\uff87\001\002\000" +
    "\012\003\234\043\237\045\233\047\055\001\002\000\012" +
    "\003\uff54\043\uff54\045\uff54\047\uff54\001\002\000\012\003" +
    "\uff9c\043\uff9c\045\uff9c\047\uff9c\001\002\000\016\003\256" +
    "\020\034\052\047\053\046\055\250\060\041\001\002\000" +
    "\012\003\uff50\043\uff50\045\uff50\047\uff50\001\002\000\012" +
    "\003\uff55\043\uff55\045\uff55\047\uff55\001\002\000\012\003" +
    "\234\043\237\045\233\047\055\001\002\000\006\003\241" +
    "\054\242\001\002\000\012\003\uff53\043\uff53\045\uff53\047" +
    "\uff53\001\002\000\012\003\uff48\043\uff48\045\uff48\047\uff48" +
    "\001\002\000\006\003\245\046\244\001\002\000\012\003" +
    "\uff49\043\uff49\045\uff49\047\uff49\001\002\000\012\003\uff47" +
    "\043\uff47\045\uff47\047\uff47\001\002\000\012\003\uff46\043" +
    "\uff46\045\uff46\047\uff46\001\002\000\012\003\uff52\043\uff52" +
    "\045\uff52\047\uff52\001\002\000\012\003\uff51\043\uff51\045" +
    "\uff51\047\uff51\001\002\000\006\003\266\046\265\001\002" +
    "\000\012\003\234\043\237\045\233\047\055\001\002\000" +
    "\012\003\234\043\237\045\233\047\055\001\002\000\012" +
    "\003\234\043\237\045\233\047\055\001\002\000\012\003" +
    "\234\043\237\045\233\047\055\001\002\000\012\003\234" +
    "\043\237\045\233\047\055\001\002\000\012\003\uff4a\043" +
    "\uff4a\045\uff4a\047\uff4a\001\002\000\012\003\uff4f\043\uff4f" +
    "\045\uff4f\047\uff4f\001\002\000\012\003\uff4b\043\uff4b\045" +
    "\uff4b\047\uff4b\001\002\000\012\003\uff4e\043\uff4e\045\uff4e" +
    "\047\uff4e\001\002\000\012\003\uff4d\043\uff4d\045\uff4d\047" +
    "\uff4d\001\002\000\012\003\uff4c\043\uff4c\045\uff4c\047\uff4c" +
    "\001\002\000\012\003\uff9a\043\uff9a\045\uff9a\047\uff9a\001" +
    "\002\000\012\003\271\043\273\045\270\047\055\001\002" +
    "\000\012\003\uff80\043\uff80\045\uff80\047\uff80\001\002\000" +
    "\012\003\uff81\043\uff81\045\uff81\047\uff81\001\002\000\016" +
    "\003\312\052\047\053\046\056\311\057\313\060\041\001" +
    "\002\000\012\003\uff7c\043\uff7c\045\uff7c\047\uff7c\001\002" +
    "\000\012\003\271\043\273\045\270\047\055\001\002\000" +
    "\006\003\274\055\275\001\002\000\012\003\uff74\043\uff74" +
    "\045\uff74\047\uff74\001\002\000\006\003\300\046\277\001" +
    "\002\000\012\003\uff7f\043\uff7f\045\uff7f\047\uff7f\001\002" +
    "\000\012\003\uff73\043\uff73\045\uff73\047\uff73\001\002\000" +
    "\012\003\uff72\043\uff72\045\uff72\047\uff72\001\002\000\012" +
    "\003\uff75\043\uff75\045\uff75\047\uff75\001\002\000\012\003" +
    "\uff7e\043\uff7e\045\uff7e\047\uff7e\001\002\000\012\003\uff7d" +
    "\043\uff7d\045\uff7d\047\uff7d\001\002\000\012\003\271\043" +
    "\273\045\270\047\055\001\002\000\012\003\271\043\273" +
    "\045\270\047\055\001\002\000\012\003\271\043\273\045" +
    "\270\047\055\001\002\000\012\003\271\043\273\045\270" +
    "\047\055\001\002\000\012\003\271\043\273\045\270\047" +
    "\055\001\002\000\006\003\344\046\343\001\002\000\012" +
    "\003\uff76\043\uff76\045\uff76\047\uff76\001\002\000\006\003" +
    "\315\046\314\001\002\000\012\003\317\043\322\045\321" +
    "\047\055\001\002\000\012\003\uff70\043\uff70\045\uff70\047" +
    "\uff70\001\002\000\012\003\uff98\043\uff98\045\uff98\047\uff98" +
    "\001\002\000\012\003\uff6c\043\uff6c\045\uff6c\047\uff6c\001" +
    "\002\000\012\003\317\043\322\045\321\047\055\001\002" +
    "\000\012\003\334\052\047\053\046\060\041\001\002\000" +
    "\006\003\325\057\324\001\002\000\012\003\uff71\043\uff71" +
    "\045\uff71\047\uff71\001\002\000\006\003\331\046\327\001" +
    "\002\000\012\003\uff66\043\uff66\045\uff66\047\uff66\001\002" +
    "\000\012\003\uff6f\043\uff6f\045\uff6f\047\uff6f\001\002\000" +
    "\012\003\uff65\043\uff65\045\uff65\047\uff65\001\002\000\012" +
    "\003\uff67\043\uff67\045\uff67\047\uff67\001\002\000\012\003" +
    "\uff64\043\uff64\045\uff64\047\uff64\001\002\000\012\003\317" +
    "\043\322\045\321\047\055\001\002\000\012\003\uff6d\043" +
    "\uff6d\045\uff6d\047\uff6d\001\002\000\012\003\uff68\043\uff68" +
    "\045\uff68\047\uff68\001\002\000\012\003\317\043\322\045" +
    "\321\047\055\001\002\000\012\003\317\043\322\045\321" +
    "\047\055\001\002\000\012\003\uff6a\043\uff6a\045\uff6a\047" +
    "\uff6a\001\002\000\012\003\uff69\043\uff69\045\uff69\047\uff69" +
    "\001\002\000\012\003\uff6b\043\uff6b\045\uff6b\047\uff6b\001" +
    "\002\000\012\003\uff6e\043\uff6e\045\uff6e\047\uff6e\001\002" +
    "\000\012\003\347\043\352\045\351\047\055\001\002\000" +
    "\012\003\uff62\043\uff62\045\uff62\047\uff62\001\002\000\012" +
    "\003\uff99\043\uff99\045\uff99\047\uff99\001\002\000\012\003" +
    "\uff63\043\uff63\045\uff63\047\uff63\001\002\000\012\003\uff5e" +
    "\043\uff5e\045\uff5e\047\uff5e\001\002\000\012\003\347\043" +
    "\352\045\351\047\055\001\002\000\012\003\362\052\047" +
    "\053\046\060\041\001\002\000\006\003\354\056\355\001" +
    "\002\000\012\003\uff61\043\uff61\045\uff61\047\uff61\001\002" +
    "\000\012\003\uff58\043\uff58\045\uff58\047\uff58\001\002\000" +
    "\006\003\360\046\357\001\002\000\012\003\uff59\043\uff59" +
    "\045\uff59\047\uff59\001\002\000\012\003\uff57\043\uff57\045" +
    "\uff57\047\uff57\001\002\000\012\003\uff56\043\uff56\045\uff56" +
    "\047\uff56\001\002\000\012\003\347\043\352\045\351\047" +
    "\055\001\002\000\012\003\uff5a\043\uff5a\045\uff5a\047\uff5a" +
    "\001\002\000\012\003\347\043\352\045\351\047\055\001" +
    "\002\000\012\003\uff5f\043\uff5f\045\uff5f\047\uff5f\001\002" +
    "\000\012\003\347\043\352\045\351\047\055\001\002\000" +
    "\012\003\uff5c\043\uff5c\045\uff5c\047\uff5c\001\002\000\012" +
    "\003\uff5b\043\uff5b\045\uff5b\047\uff5b\001\002\000\012\003" +
    "\uff5d\043\uff5d\045\uff5d\047\uff5d\001\002\000\012\003\uff60" +
    "\043\uff60\045\uff60\047\uff60\001\002\000\012\003\uff7b\043" +
    "\uff7b\045\uff7b\047\uff7b\001\002\000\012\003\uff7a\043\uff7a" +
    "\045\uff7a\047\uff7a\001\002\000\012\003\uff78\043\uff78\045" +
    "\uff78\047\uff78\001\002\000\012\003\uff79\043\uff79\045\uff79" +
    "\047\uff79\001\002\000\012\003\uff77\043\uff77\045\uff77\047" +
    "\uff77\001\002\000\004\002\uffa5\001\002\000\012\003\uff95" +
    "\043\uff95\045\uff95\047\uff95\001\002\000\012\003\uff94\043" +
    "\uff94\045\uff94\047\uff94\001\002\000\012\003\uff9d\043\uff9d" +
    "\045\uff9d\047\uff9d\001\002\000\004\002\uffa4\001\002\000" +
    "\004\002\uffa3\001\002\000\004\002\uffa2\001\002\000\004" +
    "\002\uffa1\001\002\000\012\003\uff9b\043\uff9b\045\uff9b\047" +
    "\uff9b\001\002\000\012\003\uff44\043\uff44\045\uff44\047\uff44" +
    "\001\002\000\006\003\u010b\032\u010c\001\002\000\012\003" +
    "\uff45\043\uff45\045\uff45\047\uff45\001\002\000\012\003\uff42" +
    "\043\uff42\045\uff42\047\uff42\001\002\000\010\003\u010e\023" +
    "\u010d\025\u0110\001\002\000\006\003\u0111\022\u0112\001\002" +
    "\000\012\003\uff3f\043\uff3f\045\uff3f\047\uff3f\001\002\000" +
    "\012\003\uff43\043\uff43\045\uff43\047\uff43\001\002\000\006" +
    "\003\u0111\022\u0112\001\002\000\012\003\uff3d\043\uff3d\045" +
    "\uff3d\047\uff3d\001\002\000\006\003\u0114\032\u0116\001\002" +
    "\000\012\003\uff41\043\uff41\045\uff41\047\uff41\001\002\000" +
    "\012\003\uff3b\043\uff3b\045\uff3b\047\uff3b\001\002\000\012" +
    "\003\uff3e\043\uff3e\045\uff3e\047\uff3e\001\002\000\010\003" +
    "\u0118\023\u0117\025\u011a\001\002\000\006\003\u011b\027\u011d" +
    "\001\002\000\012\003\uff38\043\uff38\045\uff38\047\uff38\001" +
    "\002\000\012\003\uff3c\043\uff3c\045\uff3c\047\uff3c\001\002" +
    "\000\006\003\u011b\027\u011d\001\002\000\012\003\uff36\043" +
    "\uff36\045\uff36\047\uff36\001\002\000\012\003\uff3a\043\uff3a" +
    "\045\uff3a\047\uff3a\001\002\000\006\003\u011f\046\u011e\001" +
    "\002\000\012\003\u0121\043\u0125\045\u0123\047\055\001\002" +
    "\000\012\003\uff34\043\uff34\045\uff34\047\uff34\001\002\000" +
    "\012\003\uff37\043\uff37\045\uff37\047\uff37\001\002\000\012" +
    "\003\uff30\043\uff30\045\uff30\047\uff30\001\002\000\012\003" +
    "\u0121\043\u0125\045\u0123\047\055\001\002\000\022\003\u0133" +
    "\052\047\053\046\054\044\055\250\056\311\057\313\060" +
    "\041\001\002\000\012\003\uff35\043\uff35\045\uff35\047\uff35" +
    "\001\002\000\006\003\u0127\020\u0128\001\002\000\012\003" +
    "\uff33\043\uff33\045\uff33\047\uff33\001\002\000\012\003\uff26" +
    "\043\uff26\045\uff26\047\uff26\001\002\000\006\003\u012a\046" +
    "\u0129\001\002\000\012\003\uff25\043\uff25\045\uff25\047\uff25" +
    "\001\002\000\012\003\uff24\043\uff24\045\uff24\047\uff24\001" +
    "\002\000\012\003\uff27\043\uff27\045\uff27\047\uff27\001\002" +
    "\000\012\003\u0121\043\u0125\045\u0123\047\055\001\002\000" +
    "\012\003\u0121\043\u0125\045\u0123\047\055\001\002\000\012" +
    "\003\u0121\043\u0125\045\u0123\047\055\001\002\000\012\003" +
    "\u0121\043\u0125\045\u0123\047\055\001\002\000\012\003\u0121" +
    "\043\u0125\045\u0123\047\055\001\002\000\012\003\u0121\043" +
    "\u0125\045\u0123\047\055\001\002\000\012\003\u0121\043\u0125" +
    "\045\u0123\047\055\001\002\000\012\003\uff28\043\uff28\045" +
    "\uff28\047\uff28\001\002\000\012\003\uff31\043\uff31\045\uff31" +
    "\047\uff31\001\002\000\012\003\uff2f\043\uff2f\045\uff2f\047" +
    "\uff2f\001\002\000\012\003\uff2b\043\uff2b\045\uff2b\047\uff2b" +
    "\001\002\000\012\003\uff2e\043\uff2e\045\uff2e\047\uff2e\001" +
    "\002\000\012\003\uff2a\043\uff2a\045\uff2a\047\uff2a\001\002" +
    "\000\012\003\uff2d\043\uff2d\045\uff2d\047\uff2d\001\002\000" +
    "\012\003\uff29\043\uff29\045\uff29\047\uff29\001\002\000\012" +
    "\003\uff2c\043\uff2c\045\uff2c\047\uff2c\001\002\000\012\003" +
    "\uff32\043\uff32\045\uff32\047\uff32\001\002\000\012\003\uff39" +
    "\043\uff39\045\uff39\047\uff39\001\002\000\012\003\uff40\043" +
    "\uff40\045\uff40\047\uff40\001\002\000\012\003\u0144\026\u0143" +
    "\027\u0145\031\u0142\001\002\000\014\003\ufff9\016\ufff9\017" +
    "\ufff9\023\ufff9\045\ufff9\001\002\000\014\003\ufffd\016\ufffd" +
    "\017\ufffd\023\ufffd\045\ufffd\001\002\000\006\003\u0140\023" +
    "\u013f\001\002\000\014\003\u014c\004\072\024\u0147\025\u0148" +
    "\033\u014e\001\002\000\014\003\ufff5\016\ufff5\017\ufff5\023" +
    "\ufff5\045\ufff5\001\002\000\014\003\ufff6\016\ufff6\017\ufff6" +
    "\023\ufff6\045\ufff6\001\002\000\014\003\ufffa\016\ufffa\017" +
    "\ufffa\023\ufffa\045\ufffa\001\002\000\020\003\uffe8\027\uffe8" +
    "\034\uffe8\037\uffe8\040\uffe8\041\uffe8\042\uffe8\001\002\000" +
    "\020\003\uffe7\027\uffe7\034\uffe7\037\uffe7\040\uffe7\041\uffe7" +
    "\042\uffe7\001\002\000\016\003\u0159\027\u015b\037\u0150\040" +
    "\u0153\041\u0154\042\u0152\001\002\000\020\003\uffe9\027\uffe9" +
    "\034\uffe9\037\uffe9\040\uffe9\041\uffe9\042\uffe9\001\002\000" +
    "\020\003\uffe6\027\uffe6\034\uffe6\037\uffe6\040\uffe6\041\uffe6" +
    "\042\uffe6\001\002\000\014\003\ufff3\016\ufff3\017\ufff3\023" +
    "\ufff3\045\ufff3\001\002\000\014\003\ufff8\016\ufff8\017\ufff8" +
    "\023\ufff8\045\ufff8\001\002\000\012\004\072\024\u0147\025" +
    "\u0148\033\u014e\001\002\000\014\034\u0151\037\u0150\040\u0153" +
    "\041\u0154\042\u0152\001\002\000\012\004\072\024\u0147\025" +
    "\u0148\033\u014e\001\002\000\020\003\uffea\027\uffea\034\uffea" +
    "\037\uffea\040\uffea\041\uffea\042\uffea\001\002\000\012\004" +
    "\072\024\u0147\025\u0148\033\u014e\001\002\000\012\004\072" +
    "\024\u0147\025\u0148\033\u014e\001\002\000\012\004\072\024" +
    "\u0147\025\u0148\033\u014e\001\002\000\020\003\uffec\027\uffec" +
    "\034\uffec\037\uffec\040\uffec\041\uffec\042\uffec\001\002\000" +
    "\020\003\uffed\027\uffed\034\uffed\037\uffed\040\uffed\041\u0154" +
    "\042\u0152\001\002\000\020\003\uffeb\027\uffeb\034\uffeb\037" +
    "\uffeb\040\uffeb\041\uffeb\042\uffeb\001\002\000\020\003\uffee" +
    "\027\uffee\034\uffee\037\uffee\040\uffee\041\u0154\042\u0152\001" +
    "\002\000\014\003\ufff1\016\ufff1\017\ufff1\023\ufff1\045\ufff1" +
    "\001\002\000\014\003\ufff4\016\ufff4\017\ufff4\023\ufff4\045" +
    "\ufff4\001\002\000\014\003\ufff2\016\ufff2\017\ufff2\023\ufff2" +
    "\045\ufff2\001\002\000\014\003\ufff7\016\ufff7\017\ufff7\023" +
    "\ufff7\045\ufff7\001\002\000\014\003\ufffc\016\ufffc\017\ufffc" +
    "\023\ufffc\045\ufffc\001\002\000\004\002\000\001\002\000" +
    "\014\003\u014c\004\072\024\u0147\025\u0148\033\u014e\001\002" +
    "\000\014\003\uffef\016\uffef\017\uffef\023\uffef\045\uffef\001" +
    "\002\000\014\003\010\016\006\017\007\023\004\045\011" +
    "\001\002\000\004\002\ufffe\001\002\000\014\003\ufff0\016" +
    "\ufff0\017\ufff0\023\ufff0\045\ufff0\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0161\000\006\002\011\003\004\001\001\000\004\010" +
    "\u0160\001\001\000\006\002\u015d\003\004\001\001\000\004" +
    "\004\u015c\001\001\000\004\004\u0140\001\001\000\002\001" +
    "\001\000\004\042\014\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\020\001\001\000\004\044\023\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\045\042\047" +
    "\041\050\037\051\036\052\035\053\034\001\001\000\002" +
    "\001\001\000\004\057\026\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\030\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\064\u0106\001" +
    "\001\000\004\044\u0105\001\001\000\004\044\u0104\001\001" +
    "\000\004\044\u0103\001\001\000\004\044\u0102\001\001\000" +
    "\004\123\u0101\001\001\000\004\044\376\001\001\000\002" +
    "\001\001\000\004\124\231\001\001\000\002\001\001\000" +
    "\004\060\213\001\001\000\004\100\051\001\001\000\006" +
    "\101\055\131\052\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\101\210\131\052\001\001\000\002\001\001" +
    "\000\006\011\070\132\066\001\001\000\002\001\001\000" +
    "\004\102\060\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\103\063\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\133\207\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\133\204\001\001\000" +
    "\004\012\074\001\001\000\004\013\076\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\165\001\001\000\004\023\144\001\001" +
    "\000\002\001\001\000\004\030\123\001\001\000\004\035" +
    "\104\001\001\000\002\001\001\000\004\036\110\001\001" +
    "\000\004\037\122\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\113\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\040\116\001\001\000\004\041\121\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\126\001\001\000\004\032\143\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\032\131\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\033\134\001\001" +
    "\000\002\001\001\000\004\034\136\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\024\147\001\001\000\004\025\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\152\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\156\001\001" +
    "\000\004\027\162\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\017\171\001\001\000\004\020\203\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\174\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\021\177\001\001" +
    "\000\004\022\200\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\061\216\131\214" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\061" +
    "\226\131\214\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\062\220\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\063\223\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\125" +
    "\234\131\235\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\047\254\050\252\051\251\053\250\054\253\130" +
    "\246\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\125\245\131\235\001\001\000\004\126\237\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\127\242\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\116\263\001\001" +
    "\000\006\125\262\131\235\001\001\000\006\125\261\131" +
    "\235\001\001\000\006\125\260\131\235\001\001\000\006" +
    "\125\257\131\235\001\001\000\006\125\256\131\235\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\117\266\131\271\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\047\307\050\306\051" +
    "\304\055\305\056\303\122\302\001\001\000\002\001\001" +
    "\000\006\117\301\131\271\001\001\000\004\120\275\001" +
    "\001\000\002\001\001\000\004\121\300\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\117\375" +
    "\131\271\001\001\000\006\117\374\131\271\001\001\000" +
    "\006\117\373\131\271\001\001\000\006\117\372\131\271" +
    "\001\001\000\006\117\371\131\271\001\001\000\004\111" +
    "\344\001\001\000\002\001\001\000\004\104\315\001\001" +
    "\000\006\105\322\131\317\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\105\341\131\317" +
    "\001\001\000\012\047\331\050\335\051\334\110\332\001" +
    "\001\000\004\106\325\001\001\000\002\001\001\000\004" +
    "\107\327\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\105\340\131\317\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\105\337\131\317\001\001\000\006\105\336" +
    "\131\317\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\112\345\131\347" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\112\370\131\347\001\001" +
    "\000\012\047\360\050\364\051\362\115\363\001\001\000" +
    "\004\113\352\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\114\355\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\112\367\131\347\001\001" +
    "\000\002\001\001\000\006\112\366\131\347\001\001\000" +
    "\002\001\001\000\006\112\365\131\347\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\065\u0109" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\066" +
    "\u010e\001\001\000\004\067\u013d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\067\u0112\001\001\000\002\001" +
    "\001\000\004\070\u0114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\071\u0118\001\001\000" +
    "\004\072\u013c\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\072\u011b\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\073\u011f\001\001\000\006\074\u0123\131\u0121" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\074\u013b\131\u0121\001\001\000\022\047\u0131" +
    "\050\u012f\051\u012d\052\u012b\054\u0130\055\u012e\056\u012c\077" +
    "\u0133\001\001\000\002\001\001\000\004\075\u0125\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\076\u012a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\074\u013a\131\u0121\001\001\000\006\074\u0139\131" +
    "\u0121\001\001\000\006\074\u0138\131\u0121\001\001\000\006" +
    "\074\u0137\131\u0121\001\001\000\006\074\u0136\131\u0121\001" +
    "\001\000\006\074\u0135\131\u0121\001\001\000\006\074\u0134" +
    "\131\u0121\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u0145\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\004\u015b\001\001\000\012\006\u014c\011\u014a" +
    "\014\u0148\015\u0149\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\007\u0159\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\011\u014a" +
    "\014\u014e\015\u0149\001\001\000\002\001\001\000\010\011" +
    "\u014a\014\u0157\015\u0149\001\001\000\002\001\001\000\010" +
    "\011\u014a\014\u0156\015\u0149\001\001\000\010\011\u014a\014" +
    "\u0155\015\u0149\001\001\000\010\011\u014a\014\u0154\015\u0149" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\006\u0162\011\u014a\014\u0148\015\u0149" +
    "\001\001\000\002\001\001\000\006\002\u0161\003\004\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


 
    private boolean errores = false;
    private TablaSimbolosDef tablaSimbolos;
    private javax.swing.JTextArea taErrores;
    private TerminoDef termino;

    public parser(java_cup.runtime.Scanner s, TablaSimbolosDef tablaSimbolos, javax.swing.JTextArea taErrores){
        this(s);
        this.tablaSimbolos = tablaSimbolos;
        this.taErrores = taErrores;
    }

    public boolean isErrores(){
        return errores;
    }

    public void syntax_error(Symbol s){
        errores = true;
        taErrores.append("Error sintactico: " + s.value.toString() + " Linea:" + s.right + " Columna:" + s.left + ". ");
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        errores = true;
        taErrores.append("No se pudo recuperar el analizador. Linea:" + s.right + " Columna:" + s.left + "\n");
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s0 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s0 ::= v0 s0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s0 ::= MENOR_QUE h0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // s0 ::= ID v5 s0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("s0",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // v0 ::= STRING v1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v0",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // v0 ::= INTEGER v1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v0",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // v0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el tipo de dato");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v0",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // v1 ::= ID v2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // v1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // v2 ::= ASIGNACION v3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v2",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // v2 ::= COMA v1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v2",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // v2 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v2",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // v2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba =, coma o punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v2",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // v3 ::= exp v4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v3",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // v3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un valor");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v3",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // v4 ::= P_COMA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v4",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // v4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v4",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // v5 ::= ASIGNACION v3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v5",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // v5 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba =");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v5",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // exp ::= exp MAS exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // exp ::= exp MENOS exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // exp ::= exp POR exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // exp ::= exp DIVISION exp 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // exp ::= PARENTESIS_A exp PARENTESIS_C 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // exp ::= valor 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("exp",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // valor ::= CADENA 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // valor ::= ENTERO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // valor ::= v6 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // v6 ::= RESULT v7 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v6",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // v7 ::= PUNTO v8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v7",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // v7 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba punto");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v7",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // v8 ::= SCORE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // v8 ::= CLASES c0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // v8 ::= VARIABLES a0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // v8 ::= METODOS m0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // v8 ::= COMENTARIOS o0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // v8 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba SCORE, CLASES, VARIABLES, METODOS o COMENTARIOS");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("v8",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // c0 ::= CORCHETE_A c1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c0",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // c0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c0",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // c1 ::= ENTERO c2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c1",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // c1 ::= ID c2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c1",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // c1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el indice");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("c1",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // c2 ::= CORCHETE_C c3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c2",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // c2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba corchete de cierre");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("c2",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // c3 ::= PUNTO c4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c3",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // c3 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c3",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // c4 ::= NOMBRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("c4",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // c4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada NOMBRE");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("c4",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // a0 ::= CORCHETE_A a1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a0",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // a0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a0",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // a1 ::= ENTERO a2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // a1 ::= ID a2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // a1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el indice");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("a1",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // a2 ::= CORCHETE_C a3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a2",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // a2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba corchete de cierre");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("a2",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // a3 ::= PUNTO a4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // a3 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a3",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // a4 ::= NOMBRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // a4 ::= TIPO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // a4 ::= FUNCION 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("a4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // a4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada NOMBRE, TIPO o FUNCION");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("a4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // m0 ::= CORCHETE_A m1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m0",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // m0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m0",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // m1 ::= ENTERO m2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // m1 ::= ID m2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // m1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el indice");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("m1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // m2 ::= CORCHETE_C m3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // m2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba corchete de cierre");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("m2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // m3 ::= PUNTO m4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m3",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // m3 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m3",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // m4 ::= NOMBRE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m4",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // m4 ::= TIPO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m4",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // m4 ::= PARAMETROS 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("m4",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // m4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada NOMBRE, TIPO o PARAMETROS");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("m4",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // o0 ::= CORCHETE_A o1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o0",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // o0 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o0",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // o1 ::= ENTERO o2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // o1 ::= ID o2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // o1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba el indice");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("o1",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // o2 ::= CORCHETE_C o3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o2",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // o2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba corchete de cierre");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("o2",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // o3 ::= PUNTO o4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o3",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // o3 ::= 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o3",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // o4 ::= TEXTO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("o4",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // o4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada TEXTO");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("o4",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // h0 ::= HTML h1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h0",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // h0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada HTML");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h0",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // h1 ::= MAYOR_QUE h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h1",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // h1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h1",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // h2 ::= MENOR_QUE h3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // h2 ::= INICIO_ETIQUETA h13 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // h2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba < o </");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // h3 ::= h5 h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // h3 ::= h6 h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // h3 ::= h7 h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // h3 ::= h8 h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // h3 ::= h9 h2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // h3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba h1,h2,br,table y for");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // h5 ::= H1 ch0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h5",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // h6 ::= H2 cs0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // h7 ::= BR br0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // h8 ::= TABLE tabl0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h8",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // h9 ::= FOR for0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h9",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // h10 ::= TR tr0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h10",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // h11 ::= TH th0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h11",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // h12 ::= TD td0 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h12",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // h13 ::= HTML h4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h13",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // h13 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada html");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h13",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // br0 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("br0",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // br0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("br0",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ch0 ::= MAYOR_QUE ch1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch0",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // ch0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch0",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // ch1 ::= INICIO_ETIQUETA ch2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch1",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // ch1 ::= r0 ch1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch1",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // ch1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </ o $$(");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch1",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // ch2 ::= H1 ch3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch2",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // ch2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba h1");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch2",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ch3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch3",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ch3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ch3",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // cs0 ::= MAYOR_QUE cs1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs0",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // cs0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs0",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // cs1 ::= INICIO_ETIQUETA cs2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs1",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // cs1 ::= r0 cs1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs1",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // cs1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </ o $$(");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs1",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // cs2 ::= H2 cs3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs2",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // cs2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba h2");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs2",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // cs3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs3",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // cs3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("cs3",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // tr0 ::= MAYOR_QUE tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr0",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // tr0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr0",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // tr1 ::= INICIO_ETIQUETA tr2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // tr1 ::= r0 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // tr1 ::= MENOR_QUE tr4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // tr1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la <, $$( o </");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // tr4 ::= h5 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // tr4 ::= h6 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // tr4 ::= h7 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // tr4 ::= h11 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // tr4 ::= h12 tr1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // tr4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada h1,h2,br,th o td");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr4",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // tr2 ::= TR tr3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr2",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // tr2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba tr");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr2",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // tr3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr3",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // tr3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tr3",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // td0 ::= MAYOR_QUE td1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td0",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // td0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("td0",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // td1 ::= INICIO_ETIQUETA td2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td1",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // td1 ::= r0 td1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td1",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // td1 ::= MENOR_QUE td4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td1",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // td1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </, $$( o <");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("td1",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // td4 ::= h5 td1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td4",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // td4 ::= h6 td1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td4",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // td4 ::= h7 td1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td4",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // td4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada h1,h2,br");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("td4",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // td2 ::= TD td3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td2",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // td2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada td");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("td2",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // td3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("td3",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // td3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("td3",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // th0 ::= MAYOR_QUE th1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th0",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // th0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("th0",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // th1 ::= INICIO_ETIQUETA th2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // th1 ::= r0 th1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // th1 ::= MENOR_QUE th4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // th1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </, $$( o <");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("th1",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // th4 ::= h5 th1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th4",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // th4 ::= h6 th1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th4",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // th4 ::= h7 th1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th4",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // th4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada h1,h2 o br");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("th4",75, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // th2 ::= TH th3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th2",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // th2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada th");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("th2",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // th3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("th3",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // th3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("th3",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // tabl0 ::= MAYOR_QUE tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl0",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // tabl0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl0",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // tabl1 ::= INICIO_ETIQUETA tabl2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl1",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // tabl1 ::= r0 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl1",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // tabl1 ::= MENOR_QUE tabl4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl1",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // tabl1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </, $$( o <");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl1",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // tabl4 ::= h5 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // tabl4 ::= h6 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // tabl4 ::= h7 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // tabl4 ::= h9 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // tabl4 ::= h10 tabl1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // tabl4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada h1,h2,br,for o tr");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl4",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // tabl2 ::= TABLE tabl3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl2",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // tabl2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada table");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl2",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // tabl3 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl3",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // tabl3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tabl3",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // for0 ::= ITERADOR for1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for0",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // for0 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada iterador");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for0",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // for1 ::= DOS_PUNTOS for2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for1",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // for1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban dos puntos");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for1",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // for2 ::= ENTERO for3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // for2 ::= ID for3 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // for2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un entero o id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for2",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // for3 ::= HASTA for4 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for3",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // for3 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada hasta");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for3",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // for4 ::= DOS_PUNTOS for5 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for4",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // for4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaban dos puntos");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for4",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // for5 ::= ENTERO for6 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for5",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // for5 ::= ID for6 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for5",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // for5 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un entero o id");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for5",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // for6 ::= P_COMA for7 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for6",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // for6 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba punto y coma");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for6",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // for7 ::= MAYOR_QUE for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for7",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // for7 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for7",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // for8 ::= INICIO_ETIQUETA for9 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for8",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // for8 ::= r0 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for8",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // for8 ::= MENOR_QUE for11 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for8",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // for8 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba </, $$( o <");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for8",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // for11 ::= h5 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // for11 ::= h6 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // for11 ::= h7 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // for11 ::= h8 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // for11 ::= h10 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // for11 ::= h11 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // for11 ::= h12 for8 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // for11 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba h1,h2,br,table,tr,th o td");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for11",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // for9 ::= FOR for10 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for9",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // for9 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba la palabra reservada for");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for9",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // for10 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("for10",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // for10 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("for10",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // r0 ::= INICIO_ACCESO r1 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("r0",87, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // r1 ::= v6 r2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("r1",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // r1 ::= ID r2 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("r1",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // r1 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba un id o RESULT...");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("r1",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // r2 ::= FIN_ACCESO 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("r2",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // r2 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba )$$");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("r2",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // h4 ::= MAYOR_QUE 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("h4",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // h4 ::= error 
            {
              String RESULT =null;
		taErrores.append("Se esperaba >");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("h4",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
